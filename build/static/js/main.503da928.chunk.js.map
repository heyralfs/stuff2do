{"version":3,"sources":["globalStyle.js","components/GitHubCorner/index.js","components/Board/style.js","components/Board/index.js","components/Header/style.js","components/Header/index.js","components/TodoItem/style.js","components/Modal/style.js","components/Modal/index.js","contexts/TodosContext.js","components/EditingForm/style.js","components/EditingForm/index.js","components/DeleteConfirmationBox/style.js","components/DeleteConfirmationBox/index.js","components/TodoItem/index.js","components/TodoList/style.js","components/TodoList/index.js","components/NewTaskForm/style.js","components/NewTaskForm/index.js","themes/index.js","components/ThemeHandler/style.js","components/ThemeHandler/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","bgColor","color","Wrapper","styled","div","SVGWrapper","svg","widgetBg","GitHubCorner","projectUrl","href","target","rel","className","width","height","viewBox","aria-hidden","d","fill","style","transformOrigin","BoardWrapper","titleColor","Board","children","HeaderWrapper","header","Header","textAlign","TodoListItem","li","ModalWrapper","Modal","TodosContext","React","createContext","TodosProvider","useState","todosLocal","window","localStorage","getItem","JSON","parse","todos","setTodos","lastIdUsed","uniqueId","setUniqueId","useEffect","setItem","stringify","Provider","value","EditingFormWrapper","EditingForm","todo","setIsEditingModalActive","useContext","remainingTodos","filter","item","id","todoEdited","setTodoEdited","submitEdition","e","preventDefault","onSubmit","type","task","onChange","required","category","defaultValue","onClick","icon","faSave","DeleteConfirmationWrapper","DeleteConfirmationBox","setIsDeleteModalActive","el","Todo","isEditingModalActive","isDeleteModalActive","completed","title","map","faCheck","faEdit","faTrash","TodoListWrapper","TodoList","filteredTodos","index","TodoItem","listTodosByCategory","Form","form","NewTaskForm","inputValue","setInputValue","selectValue","setSelectValue","event","placeholder","themes","Default","AHappyDayOnTheBeach","DamnGoodCoffee","TurnThatLightOff","FloatButton","button","ThemeButton","props","borderColor","Title","h3","ThemeHandler","setPreferences","isThemeModalActive","setIsThemeModalActive","faPalette","App","themePreference","preferences","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.503da928.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    transition: all 300ms;\r\n  }\r\n  html, body {\r\n    overflow-x: hidden;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n    font-family: 'Poppins', sans-serif;\r\n    color: ${({ theme }) => theme.color};\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #root {\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  border: 0;\r\n  right: 0;\r\n  z-index: 20;\r\n`;\r\n\r\nconst SVGWrapper = styled.svg`\r\n  fill: ${({ theme }) => theme.widgetBg};\r\n  color: ${({ theme }) => theme.bgColor};\r\n  cursor: pointer;\r\n  &:hover .octo-arm {\r\n    animation: octocat-wave 560ms ease-in-out;\r\n  }\r\n  @keyframes octocat-wave {\r\n    0%,\r\n    100% {\r\n      transform: rotate(0);\r\n    }\r\n    20%,\r\n    60% {\r\n      transform: rotate(-25deg);\r\n    }\r\n    40%,\r\n    80% {\r\n      transform: rotate(10deg);\r\n    }\r\n  }\r\n  @media (max-width: 500px) {\r\n    &:hover .octo-arm {\r\n      animation: none;\r\n    }\r\n    & .octo-arm {\r\n      animation: octocat-wave 560ms ease-in-out;\r\n    }\r\n  }\r\n  path {\r\n    color: ${({ theme }) => theme.bgColor};\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    fill: ${({ theme }) => theme.bgColor};\r\n    color: ${({ theme }) => theme.widgetBg};\r\n    path {\r\n      color: ${({ theme }) => theme.widgetBg};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function GitHubCorner({ projectUrl }) {\r\n  return (\r\n    <Wrapper>\r\n      <a href={projectUrl} target=\"_blank\" rel=\"noreferrer\">\r\n        <SVGWrapper\r\n          className=\"githubCorner\"\r\n          width=\"80\"\r\n          height=\"80\"\r\n          viewBox=\"0 0 250 250\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\r\n          <path\r\n            d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n            fill=\"currentColor\"\r\n            style={{ transformOrigin: \"130px 106px\" }}\r\n            className=\"octo-arm\"\r\n          />\r\n          <path\r\n            d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\r\n            fill=\"currentColor\"\r\n            className=\"octo-body\"\r\n          />\r\n        </SVGWrapper>\r\n      </a>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst BoardWrapper = styled.div`\r\n  margin: auto;\r\n  border: 1px solid ${({ theme }) => theme.widgetBg};\r\n  background-color: ${({ theme }) => theme.widgetBg};\r\n  overflow: hidden;\r\n  width: 100%;\r\n  min-height: 90vh;\r\n  max-width: 768px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  h1,\r\n  h2,\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n    line-height: 1;\r\n    margin-bottom: 5px;\r\n    color: ${({ theme }) => theme.titleColor};\r\n  }\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    min-height: 100vh;\r\n    padding: 10px 20px 40px 20px;\r\n  }\r\n`;\r\n\r\nexport default BoardWrapper;\r\n","import React from \"react\";\r\nimport BoardWrapper from \"./style\";\r\n\r\nfunction Board({ children }) {\r\n  return <BoardWrapper>{children}</BoardWrapper>;\r\n}\r\n\r\nexport default Board;\r\n","import styled from \"styled-components\";\r\n\r\nconst HeaderWrapper = styled.header`\r\n  padding: 18px 32px;\r\n  * {\r\n    margin: 0;\r\n  }\r\n  p,\r\n  a {\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.titleColor};\r\n  }\r\n`;\r\n\r\nexport default HeaderWrapper;\r\n","import HeaderWrapper from \"./style\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderWrapper>\r\n      <h1>STUFF 2 DO</h1>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        A to do list build with React by{\" \"}\r\n        <a href=\"https://github.com/heyralfs\" target=\"_blank\">\r\n          me\r\n        </a>\r\n      </p>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst TodoListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  /* justify-content: center; */\r\n  width: 100%;\r\n  padding: 5px 5px 5px 15px;\r\n  min-height: 35px;\r\n  overflow-wrap: break-word;\r\n  line-height: 20px;\r\n  font-size: 14px;\r\n  list-style: none;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    box-shadow: -1px 2px 3px 1px rgba(0, 0, 0, 0.1);\r\n    /* cursor: grab; */\r\n  }\r\n  &.completed {\r\n    color: #ccc;\r\n    text-decoration: line-through;\r\n  }\r\n  &.completed button {\r\n    opacity: 0.5;\r\n  }\r\n  &.completed button:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & div.todo-description {\r\n    width: calc(100% - 100px);\r\n    padding-right: 5px;\r\n  }\r\n\r\n  & div.buttons-wrapper {\r\n    width: 100%;\r\n    text-align: right;\r\n  }\r\n\r\n  & button {\r\n    height: 25px;\r\n    width: 25px;\r\n    font-size: 12px;\r\n    color: white;\r\n    transition: all 300ms;\r\n    cursor: pointer;\r\n  }\r\n  & button:not(:first-of-type) {\r\n    margin-left: 5px;\r\n  }\r\n  & button:hover {\r\n    opacity: 0.9;\r\n  }\r\n  & button:focus {\r\n    outline: 0;\r\n  }\r\n  & button:not(.deleteBtn) {\r\n    border: 1px solid ${({ theme }) => theme.bgColor};\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n  }\r\n  & button.deleteBtn {\r\n    border: 1px solid ${({ theme }) => theme.titleColor};\r\n    background-color: ${({ theme }) => theme.titleColor};\r\n  }\r\n`;\r\n\r\nexport default TodoListItem;\r\n","import styled from \"styled-components\";\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  backdrop-filter: blur(2px);\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 300ms;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 21;\r\n\r\n  & div.modal {\r\n    max-width: 90%;\r\n    background: ${({ theme }) => theme.widgetBg};\r\n    padding: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\r\n    border: 1px solid ${({ theme }) => theme.bgColor};\r\n    z-index: 99;\r\n  }\r\n`;\r\n\r\nexport default ModalWrapper;\r\n","import ModalWrapper from \"./style\";\r\n\r\nfunction Modal({ children }) {\r\n  return (\r\n    <ModalWrapper>\r\n      <div className=\"modal\">{children}</div>\r\n    </ModalWrapper>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nexport const TodosContext = React.createContext({});\r\n\r\nexport function TodosProvider({ children }) {\r\n  // check if there is any todo on local storage before setTodos\r\n  const [todos, setTodos] = React.useState(() => {\r\n    const todosLocal = window.localStorage.getItem(\"todosLocal\");\r\n    return todosLocal ? JSON.parse(todosLocal) : [];\r\n  });\r\n\r\n  // check if there is any id on local storage before setUniqueId\r\n  const [uniqueId, setUniqueId] = React.useState(() => {\r\n    const lastIdUsed = window.localStorage.getItem(\"lastIdUsed\");\r\n    return lastIdUsed ? lastIdUsed : 0;\r\n  });\r\n\r\n  // save todos and last id on localStorage when they uptade\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"todosLocal\", JSON.stringify(todos));\r\n  }, [todos]);\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"lastIdUsed\", uniqueId);\r\n  }, [uniqueId]);\r\n\r\n  return (\r\n    <TodosContext.Provider value={{ todos, setTodos, uniqueId, setUniqueId }}>\r\n      {children}\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst EditingFormWrapper = styled.div`\r\n  width: 100%;\r\n  display: block;\r\n\r\n  & h3 {\r\n    color: ${({ theme }) => theme.titleColor};\r\n    margin-top: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  & input,\r\n  & select {\r\n    height: 35px;\r\n    border: 1px solid ${({ theme }) => theme.bgColor};\r\n    transition: all 300ms;\r\n    color: ${({ theme }) => theme.color};\r\n    padding: 5px 10px;\r\n    background: ${({ theme }) => theme.widgetBg};\r\n  }\r\n  & input {\r\n    width: calc(70% - 5px);\r\n    margin-right: 5px;\r\n  }\r\n  & select {\r\n    width: 30%;\r\n  }\r\n  & input:focus,\r\n  & select:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  & div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & button {\r\n    display: inline-block;\r\n    width: calc(50% - 5px);\r\n    margin-top: 10px;\r\n    border: 0;\r\n    height: 35px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-weight: 600;\r\n    color: white;\r\n    transition: all 300ms;\r\n    cursor: pointer;\r\n  }\r\n  & button.cancelBtn {\r\n    background-color: ${({ theme }) => theme.titleColor};\r\n  }\r\n  & button.acceptBtn {\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n  }\r\n  & button:hover {\r\n    opacity: 0.9;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    & input,\r\n    & select {\r\n      width: 100%;\r\n      margin: 5px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditingFormWrapper;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\";\r\nimport EditingFormWrapper from \"./style\";\r\n\r\nconst EditingForm = ({ todo, setIsEditingModalActive }) => {\r\n  const { todos, setTodos } = React.useContext(TodosContext);\r\n\r\n  //separa as demais tasks da que será editada\r\n  const remainingTodos = todos.filter((item) => item.id !== todo.id);\r\n\r\n  // define a task a ser editada\r\n  const [todoEdited, setTodoEdited] = React.useState(todo);\r\n\r\n  function changeEditInputHandler(e) {\r\n    setTodoEdited({ ...todoEdited, task: e.target.value });\r\n  }\r\n  function changeEditSelectHandler(e) {\r\n    setTodoEdited({ ...todoEdited, category: e.target.value });\r\n  }\r\n\r\n  // devolve task editada para o array das tasks\r\n  function submitEdition(e) {\r\n    e.preventDefault();\r\n    setTodos([...remainingTodos, todoEdited]);\r\n    setIsEditingModalActive(false);\r\n  }\r\n\r\n  return (\r\n    <EditingFormWrapper>\r\n      <h3>Are you sure you want to delete this task?</h3>\r\n      <form onSubmit={submitEdition}>\r\n        <input\r\n          type=\"text\"\r\n          value={todoEdited.task}\r\n          onChange={changeEditInputHandler}\r\n        />\r\n        <select\r\n          id=\"category\"\r\n          required\r\n          onChange={changeEditSelectHandler}\r\n          defaultValue={todoEdited.category}\r\n        >\r\n          <option value=\"today\">Today</option>\r\n          <option value=\"tomorrow\">Tomorrow</option>\r\n          <option value=\"upcoming\">Upcoming</option>\r\n          <option value=\"someday\">Someday</option>\r\n        </select>\r\n      </form>\r\n      <div>\r\n        <button className=\"acceptBtn\" onClick={submitEdition}>\r\n          <FontAwesomeIcon icon={faSave} />\r\n        </button>\r\n\r\n        <button\r\n          className=\"cancelBtn\"\r\n          onClick={() => setIsEditingModalActive(false)}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </EditingFormWrapper>\r\n  );\r\n};\r\n\r\nexport default EditingForm;\r\n","import styled from \"styled-components\";\r\n\r\nconst DeleteConfirmationWrapper = styled.div`\r\n  width: 100%;\r\n  display: block;\r\n\r\n  & h3 {\r\n    color: ${({ theme }) => theme.titleColor};\r\n    margin-top: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  & div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & button {\r\n    display: inline-block;\r\n    width: calc(50% - 5px);\r\n    margin-top: 10px;\r\n    border: 0;\r\n    height: 35px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-weight: 600;\r\n    color: white;\r\n    transition: all 300ms;\r\n    cursor: pointer;\r\n  }\r\n  & button.cancelBtn {\r\n    background-color: ${({ theme }) => theme.titleColor};\r\n  }\r\n  & button.acceptBtn {\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n  }\r\n  & button:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    & div {\r\n      flex-direction: column;\r\n    }\r\n    & button {\r\n      width: 100%;\r\n      margin: 5px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DeleteConfirmationWrapper;\r\n","import React from \"react\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\";\r\nimport DeleteConfirmationWrapper from \"./style\";\r\n\r\nfunction DeleteConfirmationBox({ todo, setIsDeleteModalActive }) {\r\n  const { todos, setTodos } = React.useContext(TodosContext);\r\n\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n    setIsDeleteModalActive(false);\r\n  };\r\n\r\n  return (\r\n    <DeleteConfirmationWrapper>\r\n      <h3>Are you sure you want to delete this task?</h3>\r\n      <div>\r\n        <button className=\"acceptBtn\" onClick={deleteHandler}>\r\n          Yes, please :)\r\n        </button>\r\n        <button\r\n          className=\"cancelBtn\"\r\n          onClick={() => setIsDeleteModalActive(false)}\r\n        >\r\n          No, thanks!\r\n        </button>\r\n      </div>\r\n    </DeleteConfirmationWrapper>\r\n  );\r\n}\r\n\r\nexport default DeleteConfirmationBox;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TodoListItem from \"./style\";\r\nimport Modal from \"../Modal\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\";\r\nimport EditingForm from \"../EditingForm\";\r\nimport DeleteConfirmationBox from \"../DeleteConfirmationBox\";\r\n\r\nconst Todo = ({ todo }) => {\r\n  const { todos, setTodos } = React.useContext(TodosContext);\r\n\r\n  const [isEditingModalActive, setIsEditingModalActive] = React.useState(false);\r\n  const [isDeleteModalActive, setIsDeleteModalActive] = React.useState(false);\r\n\r\n  const checkHendler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        } else {\r\n          return item;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const editHandler = () => {\r\n    setIsEditingModalActive(!isEditingModalActive);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TodoListItem\r\n        key={`task__${todo.id}`}\r\n        className={todo.completed ? \"completed\" : \"\"}\r\n      >\r\n        <div className=\"todo-description\">{todo.task}</div>\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <button title=\"check/uncheck\" onClick={checkHendler}>\r\n            <FontAwesomeIcon icon={faCheck} />\r\n          </button>\r\n\r\n          <button title=\"edit\" onClick={editHandler}>\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </button>\r\n\r\n          <button\r\n            title=\"delete\"\r\n            className=\"deleteBtn\"\r\n            onClick={() => setIsDeleteModalActive(true)}\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </button>\r\n        </div>\r\n      </TodoListItem>\r\n\r\n      {isEditingModalActive && (\r\n        <Modal>\r\n          <EditingForm\r\n            todo={todo}\r\n            setIsEditingModalActive={setIsEditingModalActive}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {isDeleteModalActive && (\r\n        <Modal>\r\n          <DeleteConfirmationBox\r\n            todo={todo}\r\n            setIsDeleteModalActive={setIsDeleteModalActive}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import styled from \"styled-components\";\r\n\r\nconst TodoListWrapper = styled.div`\r\n  & h4 {\r\n    text-transform: uppercase;\r\n    font-size: 14px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.bgColor};\r\n    padding-left: 5px;\r\n    color: ${({ theme }) => theme.titleColor};\r\n  }\r\n  & ul {\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport default TodoListWrapper;\r\n","import React from \"react\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport TodoListWrapper from \"./style\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\";\r\n\r\nconst TodoList = () => {\r\n  const categories = [\"today\", \"tomorrow\", \"upcoming\", \"someday\"];\r\n\r\n  const { todos } = React.useContext(TodosContext);\r\n\r\n  function listTodosByCategory(category) {\r\n    const filteredTodos = todos.filter((todo) => todo.category === category);\r\n    return (\r\n      <TodoListWrapper key={`category__${category}`}>\r\n        <h4>{category}</h4>\r\n        <ul>\r\n          {filteredTodos.map((todo, index) => (\r\n            <TodoItem todo={todo} key={`${category}__${index}`} />\r\n          ))}\r\n        </ul>\r\n      </TodoListWrapper>\r\n    );\r\n  }\r\n\r\n  return <>{categories.map((category) => listTodosByCategory(category))}</>;\r\n};\r\n\r\nexport default TodoList;\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  input,\r\n  select,\r\n  button[type=\"submit\"] {\r\n    height: 35px;\r\n    border: 1px solid ${({ theme }) => theme.bgColor};\r\n    transition: all 300ms;\r\n  }\r\n  input,\r\n  select {\r\n    padding: 5px 10px;\r\n    margin-right: 5px;\r\n    background: ${({ theme }) => theme.widgetBg};\r\n  }\r\n  input,\r\n  option,\r\n  select,\r\n  input::placeholder {\r\n    color: ${({ theme }) => theme.color};\r\n  }\r\n  input:focus,\r\n  select:focus,\r\n  button[type=\"submit\"]:focus {\r\n    outline: 0;\r\n  }\r\n  input {\r\n    width: calc(75% - 45px);\r\n  }\r\n  select {\r\n    width: 25%;\r\n  }\r\n  button[type=\"submit\"] {\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n    color: white;\r\n    width: 35px;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n  }\r\n  button[type=\"submit\"]:hover {\r\n    opacity: 0.9;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    input,\r\n    select,\r\n    button[type=\"submit\"] {\r\n      width: 100%;\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./style\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\";\r\n\r\nconst NewTaskForm = () => {\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [selectValue, setSelectValue] = React.useState(\"\");\r\n\r\n  const { todos, setTodos, uniqueId, setUniqueId } = React.useContext(\r\n    TodosContext\r\n  );\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        task: inputValue,\r\n        category: selectValue,\r\n        completed: false,\r\n        id: uniqueId,\r\n      },\r\n    ]);\r\n    setUniqueId(uniqueId + 1);\r\n    setInputValue(\"\");\r\n    setSelectValue(\"\");\r\n  };\r\n\r\n  const changeInputHandler = ({ target }) => {\r\n    setInputValue(target.value);\r\n  };\r\n  const changeSelectHandler = ({ target }) => {\r\n    setSelectValue(target.value);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <input\r\n        value={inputValue}\r\n        type=\"text\"\r\n        placeholder=\"Add new task\"\r\n        id=\"task\"\r\n        onChange={changeInputHandler}\r\n        required\r\n      />\r\n      <select\r\n        id=\"category\"\r\n        onChange={changeSelectHandler}\r\n        required\r\n        value={selectValue}\r\n      >\r\n        <option value=\"\"> --Category-- </option>\r\n        <option value=\"today\">Today</option>\r\n        <option value=\"tomorrow\">Tomorrow</option>\r\n        <option value=\"upcoming\">Upcoming</option>\r\n        <option value=\"someday\">Someday</option>\r\n      </select>\r\n      <button type=\"submit\" title=\"save\">\r\n        <FontAwesomeIcon icon={faSave} />\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;\r\n","const Default = {\r\n  bgColor: \"#5b78c7\",\r\n  widgetBg: \"#fff\",\r\n  titleColor: \"lightcoral\",\r\n  color: \"#777\",\r\n};\r\n\r\nconst AHappyDayOnTheBeach = {\r\n  bgColor: \"#489AC2\",\r\n  widgetBg: \"#fdffbc\",\r\n  titleColor: \"#ff884b\",\r\n  color: \"#999\",\r\n};\r\n\r\nconst DamnGoodCoffee = {\r\n  bgColor: \"#532e1c\",\r\n  widgetBg: \"#e6e6e6\",\r\n  titleColor: \"#c5a880\",\r\n  color: \"#666\",\r\n};\r\n\r\nconst TurnThatLightOff = {\r\n  bgColor: \"#161616\",\r\n  widgetBg: \"#232332\",\r\n  titleColor: \"#BB86FC\",\r\n  color: \"#D9D9D9\",\r\n};\r\n\r\nconst themes = {\r\n  Default,\r\n  AHappyDayOnTheBeach,\r\n  DamnGoodCoffee,\r\n  TurnThatLightOff,\r\n};\r\n\r\nexport default themes;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FloatButton = styled.button`\r\n  position: fixed;\r\n  right: 2%;\r\n  bottom: 3%;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  line-height: 40px;\r\n  color: ${({ theme }) => theme.widgetBg};\r\n  background: ${({ theme }) => theme.titleColor};\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  transition: all 100ms;\r\n  cursor: pointer;\r\n  &:hover {\r\n    /* opacity: 0.9; */\r\n    transform: rotate(15deg);\r\n  }\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const ThemeButton = styled.button`\r\n  width: 100%;\r\n  height: 35px;\r\n  border: none;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  padding: 0 20px;\r\n  /* font-size: 14px; */\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  &:not(:last-child) {\r\n    color: ${(props) => props.color};\r\n    border: 1px solid;\r\n    border-bottom: 5px solid;\r\n    background: ${(props) => props.bgColor};\r\n    border-color: ${(props) => props.borderColor};\r\n    margin-bottom: 15px;\r\n  }\r\n  &:last-child {\r\n    color: white;\r\n    border: none;\r\n    background: ${({ theme }) => theme.bgColor};\r\n  }\r\n  &:not(:last-child):hover {\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  margin: 0 0 15px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n`;\r\n","import React from \"react\";\r\nimport { faPalette, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FloatButton, ThemeButton, Title } from \"./style\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction ThemeHandler({ themes, setPreferences }) {\r\n  const [isThemeModalActive, setIsThemeModalActive] = React.useState(false);\r\n\r\n  const {\r\n    Default,\r\n    AHappyDayOnTheBeach,\r\n    DamnGoodCoffee,\r\n    TurnThatLightOff,\r\n  } = themes;\r\n\r\n  return (\r\n    <>\r\n      {isThemeModalActive && (\r\n        <Modal>\r\n          <Title>Select your theme</Title>\r\n          <ThemeButton\r\n            className=\"Default\"\r\n            onClick={() => setPreferences(Default)}\r\n            bgColor={Default.widgetBg}\r\n            borderColor={Default.bgColor}\r\n            color={Default.titleColor}\r\n          >\r\n            Default\r\n          </ThemeButton>\r\n\r\n          <ThemeButton\r\n            className=\"AHappyDayOnTheBeach\"\r\n            onClick={() => setPreferences(AHappyDayOnTheBeach)}\r\n            bgColor={AHappyDayOnTheBeach.widgetBg}\r\n            borderColor={AHappyDayOnTheBeach.bgColor}\r\n            color={AHappyDayOnTheBeach.titleColor}\r\n          >\r\n            A Happy Day On The Beach\r\n          </ThemeButton>\r\n\r\n          <ThemeButton\r\n            className=\"DamnGoodCoffee\"\r\n            onClick={() => setPreferences(DamnGoodCoffee)}\r\n            bgColor={DamnGoodCoffee.widgetBg}\r\n            borderColor={DamnGoodCoffee.bgColor}\r\n            color={DamnGoodCoffee.titleColor}\r\n          >\r\n            Damn Good Coffee\r\n          </ThemeButton>\r\n\r\n          <ThemeButton\r\n            className=\"TurnThatLightOff\"\r\n            onClick={() => setPreferences(TurnThatLightOff)}\r\n            bgColor={TurnThatLightOff.widgetBg}\r\n            borderColor={TurnThatLightOff.bgColor}\r\n            color={TurnThatLightOff.titleColor}\r\n          >\r\n            Turn That Light Off\r\n          </ThemeButton>\r\n\r\n          <ThemeButton onClick={() => setIsThemeModalActive(false)}>\r\n            <FontAwesomeIcon icon={faSave} />\r\n          </ThemeButton>\r\n        </Modal>\r\n      )}\r\n\r\n      <FloatButton onClick={() => setIsThemeModalActive(true)}>\r\n        <FontAwesomeIcon icon={faPalette} />\r\n      </FloatButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ThemeHandler;\r\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./globalStyle\";\nimport GitHubCorner from \"./components/GitHubCorner\";\nimport Board from \"./components/Board\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList/index\";\nimport NewTaskForm from \"./components/NewTaskForm/index\";\nimport { TodosProvider } from \"./contexts/TodosContext\";\n\n// themes\nimport themes from \"./themes\";\nimport ThemeHandler from \"./components/ThemeHandler\";\n\nexport default function App() {\n  const [preferences, setPreferences] = React.useState(() => {\n    const themePreference = window.localStorage.getItem(\"themePreference\");\n    return themePreference ? JSON.parse(themePreference) : themes.Default;\n  });\n\n  React.useEffect(() => {\n    window.localStorage.setItem(\"themePreference\", JSON.stringify(preferences));\n  }, [preferences]);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={preferences}>\n        <GlobalStyle />\n\n        <Board>\n          <Header />\n\n          <TodosProvider>\n            <NewTaskForm />\n\n            <TodoList />\n          </TodosProvider>\n        </Board>\n\n        <GitHubCorner projectUrl=\"https://github.com/heyralfs/stuff2do\" />\n\n        <ThemeHandler themes={themes} setPreferences={setPreferences} />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}